{"remainingRequest":"D:\\专高二\\vue\\demo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\专高二\\vue\\demo\\src\\views\\admintitle\\xls.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\专高二\\vue\\demo\\src\\views\\admintitle\\xls.vue","mtime":1634003203941},{"path":"D:\\专高二\\vue\\demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\专高二\\vue\\demo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgWExTWCBmcm9tICJ4bHN4IjsNCmV4cG9ydCBkZWZhdWx0IHsNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgb25EdXR5TGlzdDogW10sIC8vIOS/neWtmOWvvOWFpeeahGV4Y2Vs6KGo5qC85pWw5o2uDQogICAgICBvcmdQYXRoOiBudWxsLCAvLyDnu4Tnu4fot6/lvoQNCiAgICB9Ow0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIC8v57uR5a6a55uR5ZCs6KGo5qC85a+85YWl5LqL5Lu2DQogICAgdGhpcy4kcmVmcy51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlIiwgKGUpID0+IHsNCiAgICAgIHRoaXMucmVhZEV4Y2VsKGUpOw0KICAgIH0pOw0KICB9LA0KICBtZXRob2RzOiB7DQogICAgLy/kuIvovb3mqKHmnb8NCiAgICBkb3dubG9hZCgpIHsNCiAgICAgIHRoaXMuJHJlZnMuZG93bmxvYWQuZGlzcGF0Y2hFdmVudChuZXcgTW91c2VFdmVudCgiY2xpY2siKSk7DQogICAgfSwNCiAgICAvLyDngrnlh7vlr7zlhaXmjInpkq7op6blj5FpbnB1dOS4iuS8oOaWh+S7tg0KICAgIGltcG9ydEV4Y2VsKCkgew0KICAgICAgLy8g6YCa6L+HZGlzcGF0Y2hFdmVudOinpuWPkeeCueWHu+S6i+S7tg0KICAgICAgdGhpcy4kcmVmcy51cGxvYWQuZGlzcGF0Y2hFdmVudChuZXcgTW91c2VFdmVudCgiY2xpY2siKSk7DQogICAgfSwNCiAgICAvL+ihqOagvOWvvOWFpQ0KICAgIHJlYWRFeGNlbChlKSB7DQogICAgICB2YXIgdGhhdCA9IHRoaXM7DQogICAgICBjb25zdCBmaWxlcyA9IGUudGFyZ2V0LmZpbGVzOw0KICAgICAgLy8g5Yik5pat5piv5ZCm5a+85YWl5paH5Lu25oiW6ICF5a+85YWl5paH5Lu255qE5qC85byP5piv5ZCm5q2j56GuDQogICAgICBpZiAoZmlsZXMubGVuZ3RoIDw9IDApIHsNCiAgICAgICAgLy/lpoLmnpzmsqHmnInmlofku7blkI0NCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgfSBlbHNlIGlmICghL1wuKHhsc3x4bHN4KSQvLnRlc3QoZmlsZXNbMF0ubmFtZS50b0xvd2VyQ2FzZSgpKSkgew0KICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLkuIrkvKDmoLzlvI/kuI3mraPnoa7vvIzor7fkuIrkvKB4bHPmiJbogIV4bHN45qC85byPIik7DQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgIH0NCiAgICAgIGNvbnN0IGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOw0KICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSAoZXYpID0+IHsNCiAgICAgICAgdHJ5IHsNCiAgICAgICAgICBjb25zdCBkYXRhID0gZXYudGFyZ2V0LnJlc3VsdDsNCiAgICAgICAgICBjb25zdCB3b3JrYm9vayA9IFhMU1gucmVhZChkYXRhLCB7DQogICAgICAgICAgICB0eXBlOiAiYmluYXJ5IiwNCiAgICAgICAgICB9KTsNCiAgICAgICAgICBjb25zdCB3c25hbWUgPSB3b3JrYm9vay5TaGVldE5hbWVzWzBdOyAvL+WPluesrOS4gOW8oOihqA0KICAgICAgICAgIGNvbnNvbGUubG9nKHdzbmFtZSwwKTsNCiAgICAgICAgICBjb25zdCB3cyA9IFhMU1gudXRpbHMuc2hlZXRfdG9fanNvbih3b3JrYm9vay5TaGVldHNbd3NuYW1lXSk7IC8v55Sf5oiQanNvbuihqOagvOWGheWuuQ0KICAgICAgICAgIGNvbnNvbGUubG9nKHdzLDEpOw0KICAgICAgICAgIHRoYXQub25EdXR5TGlzdCA9IFtdOyAvL+a4heepuuaOpeaUtuaVsOaNru+8jOaKiuWvvOWFpeeahGV4Y2Vs5pWw5o2u6L2s5YyW5oiQanNvbuagvOW8j+WtmOWCqOWIsGRhdGHkuK0NCiAgICAgICAgICAvL+e8lui+keaVsOaNrg0KICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgd3MubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKHdzW2ldKTsNCiAgICAgICAgICAgIHdzW2ldLmZvckVhY2goKGl0ZW0pPT57DQogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGl0ZW0pOw0KICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIGxldCBzaGVldERhdGEgPSB7DQogICAgICAgICAgICAgIC8vIOS9v+eUqGRheS5qc+aKiuaXpeacn+i9rOWMluS4uuaXtumXtOaIsw0KICAgICAgICAgICAgICAvLyDov5nph4zphY3nva7lr7zlhaVleGNlbOihqOeahOaVsOaNruagvOW8jw0KICAgICAgICAgICAgICAvLyBkdXR5VGltZTogdGhpcy4kZGF5anMod3NbaV1bIuaXpeacnyJdKS51bml4KCksDQogICAgICAgICAgICAgIHRpdGxlOiB3c1tpXVsi6aKY5bmy77yI5b+F5aGr77yJIl0sDQogICAgICAgICAgICAgIG9wdGlvbnM6IHdzW2ldWyLpgInpobkiXXx8W10sDQoNCiAgICAgICAgICAgICAgYW5zd2VyOiB3c1tpXVsi562U5qGIIl18fFtdLA0KICAgICAgICAgICAgICBrZXl3b3JkOiB3c1tpXVsi5YWz6ZSu5a2XIl18fCcnLA0KICAgICAgICAgICAgICBhbmFseXNpczogd3NbaV1bIuino+aekCJdfHwnJywNCiAgICAgICAgICAgICAgdHlwZTogd3NbaV1bIuWIhuexuyJdLA0KICAgICAgICAgICAgICBkaWZmaWN1bHR5OiB3c1tpXVsi6Zq+5bqmIl0sDQogICAgICAgICAgICB9Ow0KICAgICAgICAgICAgdGhhdC5vbkR1dHlMaXN0LnB1c2goc2hlZXREYXRhKTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKHNoZWV0RGF0YSwzKTsNCiAgICAgICAgICB9DQogICAgICAgICAgLy8g5riF56m65LiK5LygaW5wdXQNCiAgICAgICAgICB0aGlzLiRyZWZzLnVwbG9hZC52YWx1ZSA9ICIiOw0KICAgICAgICB9IGNhdGNoIChlKSB7DQogICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgICB9Ow0KICAgICAgZmlsZVJlYWRlci5yZWFkQXNCaW5hcnlTdHJpbmcoZmlsZXNbMF0pOw0KICAgICAgLy8gICB0aGlzLmFkZE1hcnlEdXR5RGF0YSgpOw0KICAgIH0sDQogICAgLy8g5ZCR5ZCO56uv5re75Yqg5a+85YWl55qEZXhjZWzmlbDmja4NCiAgICBhc3luYyBhZGRNYXJ5RHV0eURhdGEoKSB7DQogICAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IHBvc3QoYC9hcGkvb24tZHV0eS1yZXBvcnRzYCwgew0KICAgICAgICBvbkR1dHlMaXN0OiB0aGlzLm9uRHV0eUxpc3QsDQogICAgICB9KTsNCiAgICAgIGlmIChkYXRhLmVyckNvZGUgPT09IDIwMCkgew0KICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIua3u+WKoOaIkOWKnyEiKTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIua3u+WKoOWksei0pSEiKTsNCiAgICAgIH0NCiAgICAgIC8vIOabtOaWsOihqOagvOaVsOaNriwg6L+Z5Liq5pa55rOV5piv5Yi35paw6KGo5qC85pWw5o2u55qE5Ye95pWwDQogICAgICB0aGlzLmdldFRhYmxlRGF0YSgpOw0KICAgIH0sDQogIH0sDQp9Ow0K"},{"version":3,"sources":["xls.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"xls.vue","sourceRoot":"src/views/admintitle","sourcesContent":["<template>\r\n      \r\n  <div>\r\n    <el-button size=\"medium\" @click=\"download\"> 下载模板 </el-button>\r\n    <a ref=\"download\" style=\"display: none\" href=\"/考试星-试题模版.xls\"></a>\r\n    <el-button size=\"medium\" @click=\"importExcel\">导 入</el-button>\r\n    <input\r\n      type=\"file\"\r\n      ref=\"upload\"\r\n      accept=\".xls, .xlsx\"\r\n      style=\"display: none\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport XLSX from \"xlsx\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      onDutyList: [], // 保存导入的excel表格数据\r\n      orgPath: null, // 组织路径\r\n    };\r\n  },\r\n  mounted() {\r\n    //绑定监听表格导入事件\r\n    this.$refs.upload.addEventListener(\"change\", (e) => {\r\n      this.readExcel(e);\r\n    });\r\n  },\r\n  methods: {\r\n    //下载模板\r\n    download() {\r\n      this.$refs.download.dispatchEvent(new MouseEvent(\"click\"));\r\n    },\r\n    // 点击导入按钮触发input上传文件\r\n    importExcel() {\r\n      // 通过dispatchEvent触发点击事件\r\n      this.$refs.upload.dispatchEvent(new MouseEvent(\"click\"));\r\n    },\r\n    //表格导入\r\n    readExcel(e) {\r\n      var that = this;\r\n      const files = e.target.files;\r\n      // 判断是否导入文件或者导入文件的格式是否正确\r\n      if (files.length <= 0) {\r\n        //如果没有文件名\r\n        return false;\r\n      } else if (!/\\.(xls|xlsx)$/.test(files[0].name.toLowerCase())) {\r\n        this.$message.error(\"上传格式不正确，请上传xls或者xlsx格式\");\r\n        return false;\r\n      }\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = (ev) => {\r\n        try {\r\n          const data = ev.target.result;\r\n          const workbook = XLSX.read(data, {\r\n            type: \"binary\",\r\n          });\r\n          const wsname = workbook.SheetNames[0]; //取第一张表\r\n          console.log(wsname,0);\r\n          const ws = XLSX.utils.sheet_to_json(workbook.Sheets[wsname]); //生成json表格内容\r\n          console.log(ws,1);\r\n          that.onDutyList = []; //清空接收数据，把导入的excel数据转化成json格式存储到data中\r\n          //编辑数据\r\n          for (let i = 0; i < ws.length; i++) {\r\n            console.log(ws[i]);\r\n            ws[i].forEach((item)=>{\r\n              console.log(item);\r\n            })\r\n            let sheetData = {\r\n              // 使用day.js把日期转化为时间戳\r\n              // 这里配置导入excel表的数据格式\r\n              // dutyTime: this.$dayjs(ws[i][\"日期\"]).unix(),\r\n              title: ws[i][\"题干（必填）\"],\r\n              options: ws[i][\"选项\"]||[],\r\n\r\n              answer: ws[i][\"答案\"]||[],\r\n              keyword: ws[i][\"关键字\"]||'',\r\n              analysis: ws[i][\"解析\"]||'',\r\n              type: ws[i][\"分类\"],\r\n              difficulty: ws[i][\"难度\"],\r\n            };\r\n            that.onDutyList.push(sheetData);\r\n            console.log(sheetData,3);\r\n          }\r\n          // 清空上传input\r\n          this.$refs.upload.value = \"\";\r\n        } catch (e) {\r\n          return false;\r\n        }\r\n      };\r\n      fileReader.readAsBinaryString(files[0]);\r\n      //   this.addMaryDutyData();\r\n    },\r\n    // 向后端添加导入的excel数据\r\n    async addMaryDutyData() {\r\n      const { data } = await post(`/api/on-duty-reports`, {\r\n        onDutyList: this.onDutyList,\r\n      });\r\n      if (data.errCode === 200) {\r\n        this.$message.success(\"添加成功!\");\r\n      } else {\r\n        this.$message.error(\"添加失败!\");\r\n      }\r\n      // 更新表格数据, 这个方法是刷新表格数据的函数\r\n      this.getTableData();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"]}]}