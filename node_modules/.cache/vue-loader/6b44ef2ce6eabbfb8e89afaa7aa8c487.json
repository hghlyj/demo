{"remainingRequest":"D:\\专高二\\vue\\demo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\专高二\\vue\\demo\\src\\views\\admintitle\\xls.vue?vue&type=style&index=0&id=4e286973&scoped=true&lang=css&","dependencies":[{"path":"D:\\专高二\\vue\\demo\\src\\views\\admintitle\\xls.vue","mtime":1634002655973},{"path":"D:\\专高二\\vue\\demo\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\专高二\\vue\\demo\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\专高二\\vue\\demo\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\专高二\\vue\\demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\专高二\\vue\\demo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnRhYnBhbmVsIHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KfQ0KLnRhYnBhbmVsICNwbEFkZFF1ZXN0aW9uc3sNCiAgbGluZS1oZWlnaHQ6IDYwcHg7DQp9DQoudGFicGFuZWwgI3BsQWRkUXVlc3Rpb25zIHNwYW57DQogICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7DQogICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4Ow0KfQ0KLmltcG9ydF9wYW5lbCB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIA0KfQ0KLmltcG9ydF9wYW5lbCAuY29udGVudCB7DQogICAgYmFja2dyb3VuZDogI2ZmZiAhaW1wb3J0YW50Ow0KICB9DQouQWRkcXVlc3Rpb24gew0KICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDsNCiAgDQp9DQouQWRkcXVlc3Rpb24gLmVsLXRhYnMgew0KICAgIGhlaWdodDogMTAwJTsNCiAgfQ0K"},{"version":3,"sources":["xls.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"xls.vue","sourceRoot":"src/views/admintitle","sourcesContent":["<template>\r\n      <el-tab-pane label=\"批量录入\">\r\n        <div class=\"tabpanel\">\r\n          <div id=\"plAddQuestions\">\r\n            <span class=\"intro\"\r\n              >补充分类\r\n              <!-- 提示 -->\r\n              <el-tooltip effect=\"dark\" placement=\"top-start\">\r\n                <div slot=\"content\">\r\n                  输入区中未添加试题分类的题目，<br />可通过此设置批量补充分类\r\n                </div>\r\n                <i class=\"el-icon-question\"></i>\r\n              </el-tooltip>\r\n            </span>\r\n            <el-cascader\r\n              size=\"small\"\r\n              class=\"seleWidth\"\r\n              :show-all-levels=\"false\"\r\n              v-model=\"pl_category_id\"\r\n              :options=\"options\"\r\n              :props=\"props\"\r\n              @change=\"pl_handleChangeClassify\"\r\n            ></el-cascader>\r\n          </div>\r\n        </div>\r\n        <!-- 添加excel试题 -->\r\n        <div class=\"import_panel\">\r\n          <div class=\"title\">\r\n            <img\r\n              class=\"img\"\r\n              src=\"https://s1.kaoshixing.com/static/admin/images/a_upload.svg?v=7931656df0\"\r\n            /><br />\r\n            Excel批量导入试题\r\n          </div>\r\n\r\n          <div class=\"content\">\r\n            <div class=\"tip\">\r\n              Excel批量导入试题功能支持“单选题、判断题、填空题、问答题”四类题型的导入\r\n            </div>\r\n\r\n            <div class=\"step step-1\">\r\n              <div>\r\n                <span class=\"step-title\">第一步：</span>\r\n                <span class=\"desc\">下载Excel试题模版</span>\r\n              </div>\r\n              <div class=\"step-content\">\r\n                <div class=\"operation\">\r\n                  <a\r\n                    class=\"btn btn-primary btn-link download\"\r\n                    style=\"margin-left: 0\"\r\n                    href=\"http://121.5.193.127:10000/static/%E6%8C%AF%E6%B6%9B%E6%98%9F-%E6%89%B9%E9%87%8F%E4%B8%8A%E4%BC%A0%E8%AF%95%E9%A2%98.xls\"\r\n                  >\r\n                    <span class=\"icon icon-a_operate_download\"></span>\r\n                    下载模版\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"step step-3\">\r\n              <div>\r\n                <span class=\"step-title\">第二步：</span>\r\n                <span class=\"desc\">\r\n                  使用模版整理试题，点击“上传Excel”完成试题导入\r\n                </span>\r\n              </div>\r\n              <div class=\"step-content\">\r\n                <el-upload\r\n                  class=\"upload-demo\"\r\n                  :action=\"\r\n                    'http://121.5.193.127:10000/plex_quest/?category_id=' +\r\n                      pl_category_id\r\n                  \"\r\n                  :on-success=\"handleOk\"\r\n                  :on-error=\"handleError\"\r\n                  :before-upload=\"beforeAvatarUpload\"\r\n                  :disabled=\"isvalid\"\r\n                >\r\n                  <el-button\r\n                    slot=\"trigger\"\r\n                    size=\"small\"\r\n                    type=\"primary\"\r\n                    @click=\"isvalidUpload\"\r\n                    >点击上传</el-button\r\n                  >\r\n                  <div slot=\"tip\" class=\"el-upload__tip\">\r\n                    只能上传xls/xlsx文件，且不超过500kb\r\n                  </div>\r\n                </el-upload>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n</template>\r\n\r\n  <script>\r\n/**\r\n     * 批量上传试题\r\n     */\r\n    // 选择试题分类\r\n    pl_handleChangeClassify() {\r\n      if (this.pl_category_id.length < 3) {\r\n        this.$message({ message: \"只能选择第三级分类\" });\r\n        this.pl_category_id = [0]; // 将所选分类清空\r\n        return false;\r\n      }\r\n      this.pl_category_id = this.pl_category_id[2];\r\n    },\r\n    // 上传excel成功后的回调\r\n    handleOk(response, file) {\r\n      console.log(response);\r\n      if (response.state == 200) {\r\n        const h = this.$createElement;\r\n        // 当添加的试题全部都添加成功时\r\n        if (response.data.err_number == 0) {\r\n          this.$notify({\r\n            title: \"成功\",\r\n            message: h(\"i\", { style: \"color: teal;\" }, response.message),\r\n            type: \"success\",\r\n          });\r\n        } else {\r\n          this.$notify({\r\n            title: \"警告！\",\r\n            message: h(\r\n              \"i\",\r\n              { style: \"color: teal;\" },\r\n              response.message + \"原因可能是题库中已经存在其中试题\"\r\n            ),\r\n            type: \"warning\",\r\n            duration: 6000,\r\n          });\r\n        }\r\n      } else {\r\n        // 当添加全部出错时\r\n        this.$notify.error({\r\n          title: \"错误！\",\r\n          message: \"出错了，请检查试题分类或内容后重试！\",\r\n        });\r\n      }\r\n      this.pl_dialogVisible = false;\r\n    },\r\n    // 上传失败时的回调\r\n    handleError(err, file, fileList) {\r\n      console.log(err, file, fileList);\r\n    },\r\n    // 上传之前的回调\r\n    beforeAvatarUpload(file) {\r\n      const isxls =\r\n        file.type === \"application/vnd.ms-excel\" ||\r\n        file.type ===\r\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n      const isLt2M = file.size / 1024 / 1024 < 10;\r\n      if (!isxls) {\r\n        this.$message.error(\"上传Excel文件只能是 xls/xlsx 格式!\");\r\n        return isxls;\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error(\"上传试题Excel文件大小不能超过 10MB!\");\r\n      }\r\n      return isxls && isLt2M;\r\n    },\r\n    // 点击上传文件按钮事件\r\n    isvalidUpload() {\r\n      if (this.pl_category_id.length < 3) {\r\n        this.$message({\r\n          message: \"警告哦，补充分类为必选选项\",\r\n          type: \"warning\",\r\n        });\r\n        this.isvalid = true;\r\n      } else {\r\n        this.isvalid = false;\r\n      }\r\n    },\r\n  },\r\n  </script>\r\n// <script>\r\n// import XLSX from \"xlsx\";\r\n// export default {\r\n//   data() {\r\n//     return {\r\n//       onDutyList: [], // 保存导入的excel表格数据\r\n//       orgPath: null, // 组织路径\r\n//     };\r\n//   },\r\n//   mounted() {\r\n//     //绑定监听表格导入事件\r\n//     this.$refs.upload.addEventListener(\"change\", (e) => {\r\n//       this.readExcel(e);\r\n//     });\r\n//   },\r\n//   methods: {\r\n//     //下载模板\r\n//     download() {\r\n//       this.$refs.download.dispatchEvent(new MouseEvent(\"click\"));\r\n//     },\r\n//     // 点击导入按钮触发input上传文件\r\n//     importExcel() {\r\n//       // 通过dispatchEvent触发点击事件\r\n//       this.$refs.upload.dispatchEvent(new MouseEvent(\"click\"));\r\n//     },\r\n//     //表格导入\r\n//     readExcel(e) {\r\n//       var that = this;\r\n//       const files = e.target.files;\r\n//       // 判断是否导入文件或者导入文件的格式是否正确\r\n//       if (files.length <= 0) {\r\n//         //如果没有文件名\r\n//         return false;\r\n//       } else if (!/\\.(xls|xlsx)$/.test(files[0].name.toLowerCase())) {\r\n//         this.$message.error(\"上传格式不正确，请上传xls或者xlsx格式\");\r\n//         return false;\r\n//       }\r\n//       const fileReader = new FileReader();\r\n//       fileReader.onload = (ev) => {\r\n//         try {\r\n//           const data = ev.target.result;\r\n//           const workbook = XLSX.read(data, {\r\n//             type: \"binary\",\r\n//           });\r\n//           const wsname = workbook.SheetNames[0]; //取第一张表\r\n//           console.log(wsname,0);\r\n//           const ws = XLSX.utils.sheet_to_json(workbook.Sheets[wsname]); //生成json表格内容\r\n//           console.log(ws,1);\r\n//           that.onDutyList = []; //清空接收数据，把导入的excel数据转化成json格式存储到data中\r\n//           //编辑数据\r\n//           for (let i = 0; i < ws.length; i++) {\r\n//             console.log(ws[i]);\r\n//             ws[i].forEach((item)=>{\r\n//               console.log(item);\r\n//             })\r\n//             let sheetData = {\r\n//               // 使用day.js把日期转化为时间戳\r\n//               // 这里配置导入excel表的数据格式\r\n//               // dutyTime: this.$dayjs(ws[i][\"日期\"]).unix(),\r\n//               title: ws[i][\"题干（必填）\"],\r\n//               options: ws[i][\"选项\"]||[],\r\n\r\n//               answer: ws[i][\"答案\"]||[],\r\n//               keyword: ws[i][\"关键字\"]||'',\r\n//               analysis: ws[i][\"解析\"]||'',\r\n//               type: ws[i][\"分类\"],\r\n//               difficulty: ws[i][\"难度\"],\r\n//             };\r\n//             that.onDutyList.push(sheetData);\r\n//             console.log(sheetData,3);\r\n//           }\r\n//           // 清空上传input\r\n//           this.$refs.upload.value = \"\";\r\n//         } catch (e) {\r\n//           return false;\r\n//         }\r\n//       };\r\n//       fileReader.readAsBinaryString(files[0]);\r\n//       //   this.addMaryDutyData();\r\n//     },\r\n//     // 向后端添加导入的excel数据\r\n//     async addMaryDutyData() {\r\n//       const { data } = await post(`/api/on-duty-reports`, {\r\n//         onDutyList: this.onDutyList,\r\n//       });\r\n//       if (data.errCode === 200) {\r\n//         this.$message.success(\"添加成功!\");\r\n//       } else {\r\n//         this.$message.error(\"添加失败!\");\r\n//       }\r\n//       // 更新表格数据, 这个方法是刷新表格数据的函数\r\n//       this.getTableData();\r\n//     },\r\n//   },\r\n// };\r\n// </script>\r\n\r\n<style scoped>\r\n.tabpanel {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.tabpanel #plAddQuestions{\r\n  line-height: 60px;\r\n}\r\n.tabpanel #plAddQuestions span{\r\n      padding-left: 20px;\r\n      padding-right: 10px;\r\n}\r\n.import_panel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  \r\n}\r\n.import_panel .content {\r\n    background: #fff !important;\r\n  }\r\n.Addquestion {\r\n  height: 100% !important;\r\n  \r\n}\r\n.Addquestion .el-tabs {\r\n    height: 100%;\r\n  }\r\n</style>\r\n"]}]}